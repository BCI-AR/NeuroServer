NeuroServer

Developer Guide

This program uses GNU autoconf/automake.

To regenerate configuration scripts, do this:

aclocal ; autoconf ; automake -a

then configure with

./configure

to regenerate the Makefile's.

To create a package, use the command
make dist

MinGW / MSYS specific instructions:
In order to build under MinGW/MSYS, use commands like the following:
First, use the three commands listed above on a Linux machine to
generate an "configure" script, or download a prepackaged
neuroserver distribution.

./configure
then go into src/
cd src/
make -f Makefile.mingw
If this builds fine then you can try the sampleClient
cd ../sampleclient
make -f Makefile.mingw

Note that these Makefile's assume you have the following installed:
MinGW
MSYS
Dropline GTK binaries in default install location: C:/Dev-C++/
(you can get these from http://www.dropline.net/gtk/)

Cross-compiling for Windows under Linux specific instructions:
In order to build the Windows setup executable under linux, you will
need to install WINE, the Windows Emulator.
(apt-get install wine)
Next, you need to copy these files from an Inno Setup 4 installation to
your virtual C: drive, e.g.
Make these directories:
/home/cilibrar/.wine/c
/home/cilibrar/.wine/c/windows
/home/cilibrar/.wine/c/windows/system
And then copy these from your InnoSetup directory:
/home/cilibrar/.wine/c/windows/system/Default.isl
/home/cilibrar/.wine/c/windows/system/ISCmplr.dll
/home/cilibrar/.wine/c/windows/system/ISCmplr.dls
/home/cilibrar/.wine/c/windows/system/RegSvr.e32
/home/cilibrar/.wine/c/windows/system/Setup.e32
/home/cilibrar/.wine/c/windows/system/SetupLdr.e32
/home/cilibrar/.wine/c/windows/system/Uninst.e32
/home/cilibrar/.wine/c/windows/system/WizModernImage.bmp
/home/cilibrar/.wine/c/windows/system/WizModernImage2.bmp
/home/cilibrar/.wine/c/windows/system/WizModernSmallImage.bmp
/home/cilibrar/.wine/c/windows/system/WizModernSmallImage2.bmp
/home/cilibrar/.wine/c/windows/system/isbunzip.dll
/home/cilibrar/.wine/c/windows/system/isbzip.dll
/home/cilibrar/.wine/c/windows/system/islzma.dll
(you may just copy *.dll *.dls *.isl *.e32 *.bmp)

This file will be created for you automatically by wine:
/home/cilibrar/.wine/c/windows/win.ini

Then just copy your .iss file to somewhere on your virtual C drive.
After that, you should be able to run

wineconsole ISCC.exe <filename.iss>

from a script.

If you for some reason don't have X windows installed or don't want to
install it, unfortunately wineconsole still requires your DISPLAY
environment variable to be set, and makes a useless connection to some
X server.  The best way to mitigate this deficiency is by installing
Xvfb, the X virtual frame buffer:
(apt-get install xvfb xfonts-base)
Then start your Xvfb with something like:
Xvfb :0 -screen 0 1600x1200x32
Then in your other shell you should be able to:
export DISPLAY=localhost:0.0

This will then allow your script to use wineconsole as above.

